[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  Configuring Azure speech engine
[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  Azure speech engine configured
[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  Loading .env variables
[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  .env variables loaded
[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  Initilizing completion loop
[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 13:50:01 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:01 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 13:50:01 | Oct 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 13:50:03 | Oct 13, 2023 ]:  Starting new listener cycle
[ INFO ][ betterLogging.py:17 ][ 13:50:16 | Oct 13, 2023 ]:  Trigger detected
[ DEBUG ][ betterLogging.py:16 ][ 13:50:16 | Oct 13, 2023 ]:  Jarvis set a alarm for 5:00 a.m. tomorrow
[ INFO ][ betterLogging.py:17 ][ 13:50:16 | Oct 13, 2023 ]:  Generating transcript
[ DEBUG ][ betterLogging.py:16 ][ 13:50:16 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:16 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 13:50:16 | Oct 13, 2023 ]:  Processing audio data
[ DEBUG ][ util.py:60 ][ 13:50:16 | Oct 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/audio/transcriptions
[ DEBUG ][ util.py:60 ][ 13:50:16 | Oct 13, 2023 ]:  api_version=None data="{'model': 'whisper-1'}" message='Post details'
[ DEBUG ][ retry.py:351 ][ 13:50:16 | Oct 13, 2023 ]:  Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[ DEBUG ][ connectionpool.py:1014 ][ 13:50:16 | Oct 13, 2023 ]:  Starting new HTTPS connection (1): api.openai.com:443
[ DEBUG ][ connectionpool.py:473 ][ 13:50:18 | Oct 13, 2023 ]:  https://api.openai.com:443 "POST /v1/audio/transcriptions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 13:50:18 | Oct 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/audio/transcriptions processing_ms=454 request_id=17ffdc6f5ebe57797e3686f1a9649709 response_code=200
[ DEBUG ][ betterLogging.py:16 ][ 13:50:18 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:18 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 13:50:18 | Oct 13, 2023 ]:  Sending to completion model:
[{'content': "You are Jarvis from iron man your speach should be Similar to jarvis (so be a bit more life like) you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for 'Advanced Real-time Intelligent Assistant'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions,timers which sets a timer,Alarm which sets a Alarm. actions like shutdown restart or sleep For system: parameter 1 =action. for timers(cancel timer does not need a int value): parameter 1 =the name of the timer, parameter 2 =time in Seconds(convert the time given to Seconds) For alarms parameter 1= the desired date (use the format that you are given for the current time). the Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END.  Example timer command: START:timer>pizza timer>10:END Example cancel timer command: START:killTimer>pizza timer:END Example alarm commnad: START:alarm>03:19 PM | 28 September, 2023:END you must say the commands or they will not run. The time and date is 01:50 PM | 13 October, 2023, HST. Units are in the Imperial standard.", 'role': 'system'}, {'content': 'This current time 01:50 PM | 13 October, 2023', 'role': 'system'}, {'content': 'Jarvis, set an alarm for 5 a.m. tomorrow.', 'role': 'user'}]
[ DEBUG ][ util.py:60 ][ 13:50:18 | Oct 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
[ DEBUG ][ util.py:60 ][ 13:50:18 | Oct 13, 2023 ]:  api_version=None data='{"model": "gpt-3.5-turbo", "messages": [{"content": "You are Jarvis from iron man your speach should be Similar to jarvis (so be a bit more life like) you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for \'Advanced Real-time Intelligent Assistant\'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions,timers which sets a timer,Alarm which sets a Alarm. actions like shutdown restart or sleep For system: parameter 1 =action. for timers(cancel timer does not need a int value): parameter 1 =the name of the timer, parameter 2 =time in Seconds(convert the time given to Seconds) For alarms parameter 1= the desired date (use the format that you are given for the current time). the Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END.  Example timer command: START:timer>pizza timer>10:END Example cancel timer command: START:killTimer>pizza timer:END Example alarm commnad: START:alarm>03:19 PM | 28 September, 2023:END you must say the commands or they will not run. The time and date is 01:50 PM | 13 October, 2023, HST. Units are in the Imperial standard.", "role": "system"}, {"content": "This current time 01:50 PM | 13 October, 2023", "role": "system"}, {"content": "Jarvis, set an alarm for 5 a.m. tomorrow.", "role": "user"}], "stream": true}' message='Post details'
[ DEBUG ][ connectionpool.py:473 ][ 13:50:19 | Oct 13, 2023 ]:  https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 13:50:19 | Oct 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=6 request_id=52740f5e58d29c0c648b7eefa38f80d7 response_code=200
[ INFO ][ betterLogging.py:17 ][ 13:50:19 | Oct 13, 2023 ]:  Generating speech from text:
Certainly, sir.
[ INFO ][ betterLogging.py:17 ][ 13:50:20 | Oct 13, 2023 ]:  Generating speech from text:
Setting an alarm for 5 a.m. tomorrow.
[ INFO ][ betterLogging.py:17 ][ 13:50:21 | Oct 13, 2023 ]:  Listener loop closed
[ INFO ][ betterLogging.py:17 ][ 13:50:21 | Oct 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 13:50:21 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:21 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 13:50:21 | Oct 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 13:50:22 | Oct 13, 2023 ]:  Starting new listener cycle
[ INFO ][ betterLogging.py:17 ][ 13:50:53 | Oct 13, 2023 ]:  Trigger detected
[ DEBUG ][ betterLogging.py:16 ][ 13:50:53 | Oct 13, 2023 ]:  Jarvis you have to actually say the command
[ INFO ][ betterLogging.py:17 ][ 13:50:53 | Oct 13, 2023 ]:  Generating transcript
[ DEBUG ][ betterLogging.py:16 ][ 13:50:53 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:53 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 13:50:53 | Oct 13, 2023 ]:  Processing audio data
[ DEBUG ][ util.py:60 ][ 13:50:53 | Oct 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/audio/transcriptions
[ DEBUG ][ util.py:60 ][ 13:50:53 | Oct 13, 2023 ]:  api_version=None data="{'model': 'whisper-1'}" message='Post details'
[ DEBUG ][ connectionpool.py:473 ][ 13:50:54 | Oct 13, 2023 ]:  https://api.openai.com:443 "POST /v1/audio/transcriptions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 13:50:54 | Oct 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/audio/transcriptions processing_ms=464 request_id=cd215ff43be077f429b34ea73d13128f response_code=200
[ DEBUG ][ betterLogging.py:16 ][ 13:50:54 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:54 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 13:50:54 | Oct 13, 2023 ]:  Sending to completion model:
[{'content': "You are Jarvis from iron man your speach should be Similar to jarvis (so be a bit more life like) you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for 'Advanced Real-time Intelligent Assistant'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions,timers which sets a timer,Alarm which sets a Alarm. actions like shutdown restart or sleep For system: parameter 1 =action. for timers(cancel timer does not need a int value): parameter 1 =the name of the timer, parameter 2 =time in Seconds(convert the time given to Seconds) For alarms parameter 1= the desired date (use the format that you are given for the current time). the Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END.  Example timer command: START:timer>pizza timer>10:END Example cancel timer command: START:killTimer>pizza timer:END Example alarm commnad: START:alarm>03:19 PM | 28 September, 2023:END you must say the commands or they will not run. The time and date is 01:50 PM | 13 October, 2023, HST. Units are in the Imperial standard.", 'role': 'system'}, {'content': 'This current time 01:50 PM | 13 October, 2023', 'role': 'system'}, {'content': 'Jarvis, set an alarm for 5 a.m. tomorrow.', 'role': 'user'}, {'content': 'This current time 01:50 PM | 13 October, 2023', 'role': 'system'}, {'content': 'Jarvis, you have to actually say the command.', 'role': 'user'}]
[ DEBUG ][ util.py:60 ][ 13:50:54 | Oct 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
[ DEBUG ][ util.py:60 ][ 13:50:54 | Oct 13, 2023 ]:  api_version=None data='{"model": "gpt-3.5-turbo", "messages": [{"content": "You are Jarvis from iron man your speach should be Similar to jarvis (so be a bit more life like) you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for \'Advanced Real-time Intelligent Assistant\'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions,timers which sets a timer,Alarm which sets a Alarm. actions like shutdown restart or sleep For system: parameter 1 =action. for timers(cancel timer does not need a int value): parameter 1 =the name of the timer, parameter 2 =time in Seconds(convert the time given to Seconds) For alarms parameter 1= the desired date (use the format that you are given for the current time). the Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END.  Example timer command: START:timer>pizza timer>10:END Example cancel timer command: START:killTimer>pizza timer:END Example alarm commnad: START:alarm>03:19 PM | 28 September, 2023:END you must say the commands or they will not run. The time and date is 01:50 PM | 13 October, 2023, HST. Units are in the Imperial standard.", "role": "system"}, {"content": "This current time 01:50 PM | 13 October, 2023", "role": "system"}, {"content": "Jarvis, set an alarm for 5 a.m. tomorrow.", "role": "user"}, {"content": "This current time 01:50 PM | 13 October, 2023", "role": "system"}, {"content": "Jarvis, you have to actually say the command.", "role": "user"}], "stream": true}' message='Post details'
[ DEBUG ][ connectionpool.py:473 ][ 13:50:55 | Oct 13, 2023 ]:  https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 13:50:55 | Oct 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=7 request_id=5346b402e505fd7b4df6e0c472c028d6 response_code=200
[ INFO ][ betterLogging.py:17 ][ 13:50:56 | Oct 13, 2023 ]:  Generating speech from text:
Apologies for the confusion.
[ INFO ][ betterLogging.py:17 ][ 13:50:57 | Oct 13, 2023 ]:  Listener loop closed
[ INFO ][ betterLogging.py:17 ][ 13:50:57 | Oct 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 13:50:57 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:50:57 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 13:50:57 | Oct 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 13:50:58 | Oct 13, 2023 ]:  Starting new listener cycle
[ DEBUG ][ betterLogging.py:16 ][ 13:51:03 | Oct 13, 2023 ]:  No text could be transcribed (Python transcription)
[ INFO ][ betterLogging.py:17 ][ 13:51:03 | Oct 13, 2023 ]:  Listener loop closed
[ INFO ][ betterLogging.py:17 ][ 13:51:03 | Oct 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 13:51:03 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:51:03 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 13:51:03 | Oct 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 13:51:04 | Oct 13, 2023 ]:  Starting new listener cycle
[ INFO ][ betterLogging.py:17 ][ 13:51:43 | Oct 13, 2023 ]:  Trigger detected
[ DEBUG ][ betterLogging.py:16 ][ 13:51:43 | Oct 13, 2023 ]:  Jarvis if I asked you to set a alarm what command would you run
[ INFO ][ betterLogging.py:17 ][ 13:51:43 | Oct 13, 2023 ]:  Generating transcript
[ DEBUG ][ betterLogging.py:16 ][ 13:51:43 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:51:43 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 13:51:43 | Oct 13, 2023 ]:  Processing audio data
[ DEBUG ][ util.py:60 ][ 13:51:43 | Oct 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/audio/transcriptions
[ DEBUG ][ util.py:60 ][ 13:51:43 | Oct 13, 2023 ]:  api_version=None data="{'model': 'whisper-1'}" message='Post details'
[ DEBUG ][ connectionpool.py:473 ][ 13:51:45 | Oct 13, 2023 ]:  https://api.openai.com:443 "POST /v1/audio/transcriptions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 13:51:45 | Oct 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/audio/transcriptions processing_ms=468 request_id=56ecc7303b0539c9eadee56141011aff response_code=200
[ DEBUG ][ betterLogging.py:16 ][ 13:51:45 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:51:45 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 13:51:45 | Oct 13, 2023 ]:  Sending to completion model:
[{'content': "You are Jarvis from iron man your speach should be Similar to jarvis (so be a bit more life like) you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for 'Advanced Real-time Intelligent Assistant'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions,timers which sets a timer,Alarm which sets a Alarm. actions like shutdown restart or sleep For system: parameter 1 =action. for timers(cancel timer does not need a int value): parameter 1 =the name of the timer, parameter 2 =time in Seconds(convert the time given to Seconds) For alarms parameter 1= the desired date (use the format that you are given for the current time). the Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END.  Example timer command: START:timer>pizza timer>10:END Example cancel timer command: START:killTimer>pizza timer:END Example alarm commnad: START:alarm>03:19 PM | 28 September, 2023:END you must say the commands or they will not run. The time and date is 01:50 PM | 13 October, 2023, HST. Units are in the Imperial standard.", 'role': 'system'}, {'content': 'This current time 01:50 PM | 13 October, 2023', 'role': 'system'}, {'content': 'Jarvis, set an alarm for 5 a.m. tomorrow.', 'role': 'user'}, {'content': 'This current time 01:50 PM | 13 October, 2023', 'role': 'system'}, {'content': 'Jarvis, you have to actually say the command.', 'role': 'user'}, {'content': 'This current time 01:51 PM | 13 October, 2023', 'role': 'system'}, {'content': 'Jarvis, if I asked you to settle an alarm, what command would you run?', 'role': 'user'}]
[ DEBUG ][ util.py:60 ][ 13:51:45 | Oct 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
[ DEBUG ][ util.py:60 ][ 13:51:45 | Oct 13, 2023 ]:  api_version=None data='{"model": "gpt-3.5-turbo", "messages": [{"content": "You are Jarvis from iron man your speach should be Similar to jarvis (so be a bit more life like) you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for \'Advanced Real-time Intelligent Assistant\'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions,timers which sets a timer,Alarm which sets a Alarm. actions like shutdown restart or sleep For system: parameter 1 =action. for timers(cancel timer does not need a int value): parameter 1 =the name of the timer, parameter 2 =time in Seconds(convert the time given to Seconds) For alarms parameter 1= the desired date (use the format that you are given for the current time). the Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END.  Example timer command: START:timer>pizza timer>10:END Example cancel timer command: START:killTimer>pizza timer:END Example alarm commnad: START:alarm>03:19 PM | 28 September, 2023:END you must say the commands or they will not run. The time and date is 01:50 PM | 13 October, 2023, HST. Units are in the Imperial standard.", "role": "system"}, {"content": "This current time 01:50 PM | 13 October, 2023", "role": "system"}, {"content": "Jarvis, set an alarm for 5 a.m. tomorrow.", "role": "user"}, {"content": "This current time 01:50 PM | 13 October, 2023", "role": "system"}, {"content": "Jarvis, you have to actually say the command.", "role": "user"}, {"content": "This current time 01:51 PM | 13 October, 2023", "role": "system"}, {"content": "Jarvis, if I asked you to settle an alarm, what command would you run?", "role": "user"}], "stream": true}' message='Post details'
[ DEBUG ][ connectionpool.py:473 ][ 13:51:46 | Oct 13, 2023 ]:  https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 13:51:46 | Oct 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=9 request_id=c7020edf53b03e6ad8eca7ad034ba27d response_code=200
[ INFO ][ betterLogging.py:17 ][ 13:51:47 | Oct 13, 2023 ]:  Generating speech from text:
If you would like me to set an alarm, the command would be: START:alarm>{desired date and time}:END.
[ INFO ][ betterLogging.py:17 ][ 13:51:50 | Oct 13, 2023 ]:  Listener loop closed
[ INFO ][ betterLogging.py:17 ][ 13:51:50 | Oct 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 13:51:50 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:51:50 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 13:51:50 | Oct 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 13:51:51 | Oct 13, 2023 ]:  Starting new listener cycle
[ DEBUG ][ betterLogging.py:16 ][ 13:52:33 | Oct 13, 2023 ]:  No text could be transcribed (Python transcription)
[ INFO ][ betterLogging.py:17 ][ 13:52:33 | Oct 13, 2023 ]:  Listener loop closed
[ INFO ][ betterLogging.py:17 ][ 13:52:33 | Oct 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 13:52:33 | Oct 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 13:52:33 | Oct 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 13:52:33 | Oct 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 13:52:34 | Oct 13, 2023 ]:  Starting new listener cycle
