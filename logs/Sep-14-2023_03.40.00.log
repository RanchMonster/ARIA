[ INFO ][ betterLogging.py:17 ][ 17:40:02 | Sep 13, 2023 ]:  Configuring Azure speech engine
[ INFO ][ betterLogging.py:17 ][ 17:40:02 | Sep 13, 2023 ]:  Azure speech engine configured
[ INFO ][ betterLogging.py:17 ][ 17:40:03 | Sep 13, 2023 ]:  Loading .env variables
[ INFO ][ betterLogging.py:17 ][ 17:40:03 | Sep 13, 2023 ]:  .env variables loaded
[ INFO ][ betterLogging.py:17 ][ 17:40:03 | Sep 13, 2023 ]:  Initilizing completion loop
[ INFO ][ betterLogging.py:17 ][ 17:40:03 | Sep 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 17:40:03 | Sep 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 17:40:03 | Sep 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 17:40:03 | Sep 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 17:40:05 | Sep 13, 2023 ]:  Starting new listener cycle
[ INFO ][ betterLogging.py:17 ][ 17:40:14 | Sep 13, 2023 ]:  Trigger detected
[ DEBUG ][ betterLogging.py:16 ][ 17:40:14 | Sep 13, 2023 ]:  Jarvis I'm home
[ INFO ][ betterLogging.py:17 ][ 17:40:14 | Sep 13, 2023 ]:  Generating transcript
[ DEBUG ][ betterLogging.py:16 ][ 17:40:14 | Sep 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 17:40:14 | Sep 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 17:40:14 | Sep 13, 2023 ]:  Processing audio data
[ DEBUG ][ util.py:60 ][ 17:40:14 | Sep 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/audio/transcriptions
[ DEBUG ][ util.py:60 ][ 17:40:14 | Sep 13, 2023 ]:  api_version=None data="{'model': 'whisper-1'}" message='Post details'
[ DEBUG ][ retry.py:351 ][ 17:40:14 | Sep 13, 2023 ]:  Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[ DEBUG ][ connectionpool.py:1014 ][ 17:40:14 | Sep 13, 2023 ]:  Starting new HTTPS connection (1): api.openai.com:443
[ DEBUG ][ connectionpool.py:473 ][ 17:40:16 | Sep 13, 2023 ]:  https://api.openai.com:443 "POST /v1/audio/transcriptions HTTP/1.1" 200 28
[ DEBUG ][ util.py:60 ][ 17:40:16 | Sep 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/audio/transcriptions processing_ms=390 request_id=ab1a07d5c099a0ee81d4fc84f93da58a response_code=200
[ DEBUG ][ betterLogging.py:16 ][ 17:40:16 | Sep 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 17:40:16 | Sep 13, 2023 ]:  OpenAI loaded with key "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"
[ INFO ][ betterLogging.py:17 ][ 17:40:16 | Sep 13, 2023 ]:  Sending to completion model:
[{'content': "You are Jarvis from iron man your speach should be Similar and you should always refer to the user as sir you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for 'Advanced Real-time Intelligent Assistant'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions like shutdown restart or sleep For system: parameter 1 =action. Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END you must say the command . The time and date is 05:40 PM, HST. Units are in the Imperial standard.", 'role': 'system'}, {'content': "Jarvis, I'm home.", 'role': 'user'}]
[ DEBUG ][ util.py:60 ][ 17:40:16 | Sep 13, 2023 ]:  message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
[ DEBUG ][ util.py:60 ][ 17:40:16 | Sep 13, 2023 ]:  api_version=None data='{"model": "gpt-4", "messages": [{"content": "You are Jarvis from iron man your speach should be Similar and you should always refer to the user as sir you are a aria based model, an AI voice assistant with a knowledge cutoff of September, 2021. Aria stands for \'Advanced Real-time Intelligent Assistant\'.As an AI, you can use commands. These commands will be removed from your message before it is sent. Commands you can use are: system which handels all system actions like shutdown restart or sleep For system: parameter 1 =action. Command format: START:{THE COMMAND}>{PARAMETER(S)} Example system command: START:system>shutdown:END you must say the command . The time and date is 05:40 PM, HST. Units are in the Imperial standard.", "role": "system"}, {"content": "Jarvis, I\'m home.", "role": "user"}], "stream": true}' message='Post details'
[ DEBUG ][ connectionpool.py:473 ][ 17:40:17 | Sep 13, 2023 ]:  https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
[ DEBUG ][ util.py:60 ][ 17:40:17 | Sep 13, 2023 ]:  message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=7 request_id=e965d32da24d0bec4744b87cb7087997 response_code=200
[ INFO ][ betterLogging.py:17 ][ 17:40:17 | Sep 13, 2023 ]:  Generating speech from text:
Welcome home, sir.
[ INFO ][ betterLogging.py:17 ][ 17:40:18 | Sep 13, 2023 ]:  Listener loop closed
[ INFO ][ betterLogging.py:17 ][ 17:40:18 | Sep 13, 2023 ]:  Initilizing new listener loop
[ DEBUG ][ betterLogging.py:16 ][ 17:40:18 | Sep 13, 2023 ]:  Initilizing OpenAI
[ INFO ][ betterLogging.py:17 ][ 17:40:18 | Sep 13, 2023 ]:  OpenAI loaded with key "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"
[ DEBUG ][ betterLogging.py:16 ][ 17:40:18 | Sep 13, 2023 ]:  Initalizing microphone
[ INFO ][ betterLogging.py:17 ][ 17:40:19 | Sep 13, 2023 ]:  Starting new listener cycle
